version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-bigkahuna_hr}
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh:ro
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-user} -d ${POSTGRES_DB:-bigkahuna_hr}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - bigkahuna-network

  # Redis (Optional - for caching/sessions)
  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    networks:
      - bigkahuna-network

  # FastAPI Backend
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
      args:
        - BUILD_ENV=${ENVIRONMENT:-development}
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    env_file:
      - .env
    environment:
      # Override database URL for container networking
      - DATABASE_URL=postgresql://${POSTGRES_USER:-user}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-bigkahuna_hr}
      # Override Redis URL if using
      - REDIS_URL=redis://:${REDIS_PASSWORD:-}@redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - backend_logs:/app/logs
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    restart: unless-stopped
    networks:
      - bigkahuna-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Vue.js Frontend
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - BUILD_ENV=${ENVIRONMENT:-development}
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    environment:
      - VUE_APP_API_URL=${VUE_APP_API_URL:-http://localhost:8000}
      - VUE_APP_ENVIRONMENT=${ENVIRONMENT:-development}
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run serve -- --port 3000 --host 0.0.0.0
    restart: unless-stopped
    networks:
      - bigkahuna-network
    depends_on:
      - backend

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    networks:
      - bigkahuna-network
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  backend_logs:
    driver: local
  nginx_logs:
    driver: local

networks:
  bigkahuna-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 